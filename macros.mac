%ifndef MACROS_MAC
    %define MACROS_MAC
    ; Common macros for procedures
    %macro push_bp 0
        push    rbp        ; Push old base pointer to stack
        mov     rbp, rsp   ; Move stack pointer to base pointer
    %endmacro

    %macro pop_bp 0
        mov     rsp, rbp   ; Move base pointer to stack pointer
        pop     rbp        ; Pop base pointer
    %endmacro

    %macro pop_sp 2
        add     rsp, (%1 * %2)  ; Offset
    %endmacro

    ; Procedure for count array length
    ; Require 3 arguments:
    ;   1. Address of first element of array
    ;   2. End symbol (0x24 example)
    ;   3. Count of bytes (1, 2, 4, etc...)
    ; Example: array_length 8 0x24 array
    %macro array_length 3
        mov rdi, %1
        mov rsi, %2
        mov rdx, %3

        xor rcx, rcx

        call cnt_value_of_array

        pop_sp %0, BYTE_SIZE_64
    %endmacro

    cnt_value_of_array:
        push_bp
    .loop:
        cmp rsi, [rdi]
        je .exit

        add rdi, rdx
        inc rcx

        jmp .loop
    .exit:
        pop_bp

        xor rdi, rdi
        xor rsi, rsi
        xor rdx, rdx

        ret
%endif
